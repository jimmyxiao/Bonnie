<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bonniedraw.works.dao.WorksLikeMapper">
  <resultMap id="BaseResultMap" type="com.bonniedraw.works.model.WorksLike">
    <id column="WORKS_LIKE_ID" jdbcType="INTEGER" property="worksLikeId" />
    <result column="WORKS_ID" jdbcType="INTEGER" property="worksId" />
    <result column="USER_ID" jdbcType="INTEGER" property="userId" />
    <result column="LIKE_TYPE" jdbcType="INTEGER" property="likeType" />
  </resultMap>
  <sql id="Base_Column_List">
    WORKS_LIKE_ID, WORKS_ID, USER_ID, LIKE_TYPE
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from works_like
    where WORKS_LIKE_ID = #{worksLikeId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from works_like
    where WORKS_LIKE_ID = #{worksLikeId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.bonniedraw.works.model.WorksLike">
    insert into works_like (WORKS_LIKE_ID, WORKS_ID, USER_ID, 
      LIKE_TYPE)
    values (#{worksLikeId,jdbcType=INTEGER}, #{worksId,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, 
      #{likeType,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.bonniedraw.works.model.WorksLike">
    insert into works_like
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="worksLikeId != null">
        WORKS_LIKE_ID,
      </if>
      <if test="worksId != null">
        WORKS_ID,
      </if>
      <if test="userId != null">
        USER_ID,
      </if>
      <if test="likeType != null">
        LIKE_TYPE,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="worksLikeId != null">
        #{worksLikeId,jdbcType=INTEGER},
      </if>
      <if test="worksId != null">
        #{worksId,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="likeType != null">
        #{likeType,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.bonniedraw.works.model.WorksLike">
    update works_like
    <set>
      <if test="worksId != null">
        WORKS_ID = #{worksId,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        USER_ID = #{userId,jdbcType=INTEGER},
      </if>
      <if test="likeType != null">
        LIKE_TYPE = #{likeType,jdbcType=INTEGER},
      </if>
    </set>
    where WORKS_LIKE_ID = #{worksLikeId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.bonniedraw.works.model.WorksLike">
    update works_like
    set WORKS_ID = #{worksId,jdbcType=INTEGER},
      USER_ID = #{userId,jdbcType=INTEGER},
      LIKE_TYPE = #{likeType,jdbcType=INTEGER}
    where WORKS_LIKE_ID = #{worksLikeId,jdbcType=INTEGER}
  </update>
  
  <delete id="deleteByNotPrimaryKey" parameterType="com.bonniedraw.works.model.WorksLike">
    delete from works_like
    where WORKS_ID = #{worksId,jdbcType=INTEGER}
    and USER_ID = #{userId,jdbcType=INTEGER}
    and LIKE_TYPE = #{likeType,jdbcType=INTEGER}
  </delete>
  
</mapper>